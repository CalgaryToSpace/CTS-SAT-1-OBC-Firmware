#ifndef INC_ADCS_STRUCT_PACKERS_H_
#define INC_ADCS_STRUCT_PACKERS_H_

#include "adcs_drivers/adcs_types.h"

// ADCS packer functions
uint8_t ADCS_pack_to_ack_struct(uint8_t* data_received, ADCS_cmd_ack_struct_t *result);
uint8_t ADCS_pack_to_identification_struct(uint8_t* data_received, ADCS_id_struct_t *result);
uint8_t ADCS_pack_to_program_status_struct(uint8_t* data_received, ADCS_boot_running_status_struct_t *result);
uint8_t ADCS_pack_to_comms_status_struct(uint8_t* data_received, ADCS_comms_status_struct_t *result);
uint8_t ADCS_pack_to_power_control_struct(uint8_t* data_received, ADCS_power_control_struct_t *result);
uint8_t ADCS_pack_to_angular_rates_struct(uint8_t* data_received, ADCS_angular_rates_struct_t *result);
uint8_t ADCS_pack_to_llh_position_struct(uint8_t* data_received, ADCS_llh_position_struct_t *result);
uint8_t ADCS_pack_to_unix_time_save_mode_struct(uint8_t* data_received, ADCS_set_unix_time_save_mode_struct_t *result);
uint8_t ADCS_pack_to_orbit_params_struct(uint8_t* data_received, ADCS_orbit_params_struct_t *result);
uint8_t ADCS_pack_to_rated_sensor_rates_struct(uint8_t* data_received, ADCS_rated_sensor_rates_struct_t *result);
uint8_t ADCS_pack_to_wheel_speed_struct(uint8_t* data_received, ADCS_wheel_speed_struct_t *result);
uint8_t ADCS_pack_to_magnetorquer_command_struct(uint8_t* data_received, ADCS_magnetorquer_command_struct_t *result);
uint8_t ADCS_pack_to_raw_magnetometer_values_struct(uint8_t* data_received, ADCS_raw_magnetometer_values_struct_t *result);
uint8_t ADCS_pack_to_fine_angular_rates_struct(uint8_t* data_received, ADCS_fine_angular_rates_struct_t *result);
uint8_t ADCS_pack_to_magnetometer_config_struct(uint8_t* data_received, ADCS_magnetometer_config_struct_t *result);
uint8_t ADCS_pack_to_commanded_attitude_angles_struct(uint8_t* data_received, ADCS_commanded_angles_struct_t *result);
uint8_t ADCS_pack_to_estimation_params_struct(uint8_t* data_received, ADCS_estimation_params_struct_t *result);
uint8_t ADCS_pack_to_augmented_sgp4_params_struct(uint8_t* data_received, ADCS_augmented_sgp4_params_struct_t *result);
uint8_t ADCS_pack_to_tracking_controller_target_reference_struct(uint8_t* data_received, ADCS_tracking_controller_target_struct_t *result);
uint8_t ADCS_pack_to_rate_gyro_config_struct(uint8_t* data_received, ADCS_rate_gyro_config_struct_t *result);
uint8_t ADCS_pack_to_estimated_attitude_angles_struct(uint8_t *data_received, ADCS_estimated_attitude_angles_struct_t *angles);
uint8_t ADCS_pack_to_magnetic_field_vector_struct(uint8_t *data_received, ADCS_magnetic_field_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_fine_sun_vector_struct(uint8_t *data_received, ADCS_fine_sun_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_nadir_vector_struct(uint8_t *data_received, ADCS_nadir_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_commanded_wheel_speed_struct(uint8_t *data_received, ADCS_wheel_speed_struct_t *result);
uint8_t ADCS_pack_to_igrf_magnetic_field_vector_struct(uint8_t *data_received, ADCS_magnetic_field_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_quaternion_error_vector_struct(uint8_t *data_received, ADCS_quaternion_error_vector_struct_t *result);
uint8_t ADCS_pack_to_estimated_gyro_bias_struct(uint8_t* data_received, ADCS_estimated_gyro_bias_struct_t *result);
uint8_t ADCS_pack_to_estimation_innovation_vector_struct(uint8_t* data_received, ADCS_estimation_innovation_vector_struct_t *result);
uint8_t ADCS_pack_to_raw_cam1_sensor_struct(uint8_t* data_received, ADCS_raw_cam_sensor_struct_t *result);
uint8_t ADCS_pack_to_raw_cam2_sensor_struct(uint8_t* data_received, ADCS_raw_cam_sensor_struct_t *result);
uint8_t ADCS_pack_to_raw_coarse_sun_sensor_1_to_6_struct(uint8_t* data_received, ADCS_raw_coarse_sun_sensor_1_to_6_struct_t *result);
uint8_t ADCS_pack_to_raw_coarse_sun_sensor_7_to_10_struct(uint8_t* data_received, ADCS_raw_coarse_sun_sensor_7_to_10_struct_t *result);
uint8_t ADCS_pack_to_cubecontrol_current_struct(uint8_t* data_received, ADCS_cubecontrol_current_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_status_struct(uint8_t* data_received, ADCS_raw_gps_status_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_time_struct(uint8_t* data_received, ADCS_raw_gps_time_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_struct(ADCS_gps_axis_enum_t axis, uint8_t *data_received, ADCS_raw_gps_struct_t *result);
uint8_t ADCS_pack_to_measurements_struct(uint8_t* telemetry_data, ADCS_measurements_struct_t *measurements);
uint8_t ADCS_pack_to_file_info_struct(uint8_t *raw_data, ADCS_file_info_struct_t *file_info_struct);
uint8_t ADCS_pack_to_download_block_ready_struct(const uint8_t *data_received, ADCS_download_block_ready_struct_t *result);
uint8_t ADCS_pack_to_sd_card_format_erase_progress_struct(uint8_t *data_received, ADCS_sd_card_format_erase_progress_struct_t *result);
uint8_t ADCS_pack_to_file_download_buffer_struct(uint8_t *data_received, ADCS_file_download_buffer_struct_t *result);
uint8_t ADCS_pack_to_ack_struct(uint8_t* data_received, ADCS_cmd_ack_struct_t *result);
uint8_t ADCS_pack_to_identification_struct(uint8_t* data_received, ADCS_id_struct_t *result);
uint8_t ADCS_pack_to_program_status_struct(uint8_t* data_received, ADCS_boot_running_status_struct_t *result);
uint8_t ADCS_pack_to_comms_status_struct(uint8_t* data_received, ADCS_comms_status_struct_t *result);
uint8_t ADCS_pack_to_power_control_struct(uint8_t* data_received, ADCS_power_control_struct_t *result);
uint8_t ADCS_pack_to_angular_rates_struct(uint8_t* data_received, ADCS_angular_rates_struct_t *result);
uint8_t ADCS_pack_to_llh_position_struct(uint8_t* data_received, ADCS_llh_position_struct_t *result);
uint8_t ADCS_pack_to_unix_time_save_mode_struct(uint8_t* data_received, ADCS_set_unix_time_save_mode_struct_t *result);
uint8_t ADCS_pack_to_orbit_params_struct(uint8_t* data_received, ADCS_orbit_params_struct_t *result);
uint8_t ADCS_pack_to_rated_sensor_rates_struct(uint8_t* data_received, ADCS_rated_sensor_rates_struct_t *result);
uint8_t ADCS_pack_to_wheel_speed_struct(uint8_t* data_received, ADCS_wheel_speed_struct_t *result);
uint8_t ADCS_pack_to_magnetorquer_command_struct(uint8_t* data_received, ADCS_magnetorquer_command_struct_t *result);
uint8_t ADCS_pack_to_raw_magnetometer_values_struct(uint8_t* data_received, ADCS_raw_magnetometer_values_struct_t *result);
uint8_t ADCS_pack_to_fine_angular_rates_struct(uint8_t* data_received, ADCS_fine_angular_rates_struct_t *result);
uint8_t ADCS_pack_to_magnetometer_config_struct(uint8_t* data_received, ADCS_magnetometer_config_struct_t *result);
uint8_t ADCS_pack_to_commanded_attitude_angles_struct(uint8_t* data_received, ADCS_commanded_angles_struct_t *result);
uint8_t ADCS_pack_to_estimation_params_struct(uint8_t* data_received, ADCS_estimation_params_struct_t *result);
uint8_t ADCS_pack_to_augmented_sgp4_params_struct(uint8_t* data_received, ADCS_augmented_sgp4_params_struct_t *result);
uint8_t ADCS_pack_to_tracking_controller_target_reference_struct(uint8_t* data_received, ADCS_tracking_controller_target_struct_t *result);
uint8_t ADCS_pack_to_rate_gyro_config_struct(uint8_t* data_received, ADCS_rate_gyro_config_struct_t *result);
uint8_t ADCS_pack_to_estimated_attitude_angles_struct(uint8_t *data_received, ADCS_estimated_attitude_angles_struct_t *angles);
uint8_t ADCS_pack_to_magnetic_field_vector_struct(uint8_t *data_received, ADCS_magnetic_field_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_fine_sun_vector_struct(uint8_t *data_received, ADCS_fine_sun_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_nadir_vector_struct(uint8_t *data_received, ADCS_nadir_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_commanded_wheel_speed_struct(uint8_t *data_received, ADCS_wheel_speed_struct_t *result);
uint8_t ADCS_pack_to_igrf_magnetic_field_vector_struct(uint8_t *data_received, ADCS_magnetic_field_vector_struct_t *vector_components);
uint8_t ADCS_pack_to_quaternion_error_vector_struct(uint8_t *data_received, ADCS_quaternion_error_vector_struct_t *result);
uint8_t ADCS_pack_to_estimated_gyro_bias_struct(uint8_t* data_received, ADCS_estimated_gyro_bias_struct_t *result);
uint8_t ADCS_pack_to_estimation_innovation_vector_struct(uint8_t* data_received, ADCS_estimation_innovation_vector_struct_t *result);
uint8_t ADCS_pack_to_raw_cam1_sensor_struct(uint8_t* data_received, ADCS_raw_cam_sensor_struct_t *result);
uint8_t ADCS_pack_to_raw_cam2_sensor_struct(uint8_t* data_received, ADCS_raw_cam_sensor_struct_t *result);
uint8_t ADCS_pack_to_raw_coarse_sun_sensor_1_to_6_struct(uint8_t* data_received, ADCS_raw_coarse_sun_sensor_1_to_6_struct_t *result);
uint8_t ADCS_pack_to_raw_coarse_sun_sensor_7_to_10_struct(uint8_t* data_received, ADCS_raw_coarse_sun_sensor_7_to_10_struct_t *result);
uint8_t ADCS_pack_to_cubecontrol_current_struct(uint8_t* data_received, ADCS_cubecontrol_current_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_status_struct(uint8_t* data_received, ADCS_raw_gps_status_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_time_struct(uint8_t* data_received, ADCS_raw_gps_time_struct_t *result);
uint8_t ADCS_pack_to_raw_gps_struct(ADCS_gps_axis_enum_t axis, uint8_t *data_received, ADCS_raw_gps_struct_t *result);
uint8_t ADCS_pack_to_measurements_struct(uint8_t* telemetry_data, ADCS_measurements_struct_t *measurements);
uint8_t ADCS_pack_to_acp_execution_state_struct(uint8_t* data_received, ADCS_acp_execution_state_struct_t* output_struct);
uint8_t ADCS_pack_to_current_state_1_struct(uint8_t* data_received, ADCS_current_state_1_struct_t* output_struct);
uint8_t ADCS_pack_to_raw_star_tracker_struct(uint8_t* input_data, ADCS_raw_star_tracker_struct_t* output_data);
uint8_t ADCS_pack_to_unix_time_ms(uint8_t *data_received, uint64_t *output_data);
uint8_t ADCS_pack_to_sd_log_config_struct(uint8_t *data_received, uint8_t which_log, ADCS_sd_log_config_struct_t *config);
uint8_t ADCS_pack_to_wheel_currents_struct(const uint8_t *data_received, ADCS_wheel_currents_struct_t *output);
uint8_t ADCS_pack_to_cubesense_currents_struct(const uint8_t *input, ADCS_cubesense_currents_struct_t *output);
uint8_t ADCS_pack_to_misc_currents_struct(const uint8_t *input, ADCS_misc_currents_struct_t *output);

#endif /* INC_ADCS_STRUCT_PACKERS_H_ */