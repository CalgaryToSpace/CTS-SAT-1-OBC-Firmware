import hashlib
import random
import string
from pathlib import Path

NUM_TESTS = 20
random_strings = []

# Generate random strings for testing
for i in range(NUM_TESTS):
    random_strings.append(
        "".join(
            random.choice(string.ascii_letters + string.digits)
            for _ in range(random.randint(4000, 4000))
        )
    )

lines = []
for i in range(NUM_TESTS):
    # Create c-style arrays
    lines.append(f"static const uint8_t random_message_{i}[] = \"{random_strings[i]}\";")
    lines.append(
        f"static const uint32_t random_message_{i}_size = {len(random_strings[i])};"
    )

    # Hash random string and get the bytes
    hash_bytes = hashlib.sha256(bytes(random_strings[i], "utf8")).digest()

    # Create a C-style array using the hash
    hex_values = ", ".join(f"0x{byte:02x}" for byte in hash_bytes)
    expected = f"static const uint8_t random_expected_{i}[] = " + "{" + hex_values + "};"
    lines.append(expected)
    lines.append("") # Create space between sections.

# Write random strings and their expected digest to a header file for use in testing
with open(Path(__file__).parent / "sha256_unit_test_cases.h", "w") as f:
    f.write(
    """// File generated by `sha256_unit_tests.py` script.
// Running this script will generate a new set of test cases.

#ifndef INCLUDE_GUARD_SHA256_UNIT_TEST_CASES_H
#define INCLUDE_GUARD_SHA256_UNIT_TEST_CASES_H

#include <stdint.h>

"""
    )

    f.write("\n".join(lines))

    f.write(
        """
#endif /* INCLUDE_GUARD_SHA256_UNIT_TEST_CASES_H */
"""
    )
    