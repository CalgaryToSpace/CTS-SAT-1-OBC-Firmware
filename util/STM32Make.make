##########################################################################################################################
# File automatically-generated by STM32forVSCode
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = CTS-SAT-1_FW


######################################
# building variables
######################################
# debug build?
DEBUG = 0
# optimization
OPT = -O3


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/adcs_drivers/adcs_commands.c \
Core/Src/adcs_drivers/adcs_internal_drivers.c \
Core/Src/adcs_drivers/adcs_struct_packers.c \
Core/Src/adcs_drivers/adcs_types_to_json.c \
Core/Src/antenna_deploy_drivers/ant_commands.c \
Core/Src/antenna_deploy_drivers/ant_internal_drivers.c \
Core/Src/camera/camera_init.c \
Core/Src/comms_drivers/comms_drivers.c \
Core/Src/config/configuration.c \
Core/Src/crc/crc.c \
Core/Src/crypto/sha256.c \
Core/Src/csp/arch/freertos/csp_clock.c \
Core/Src/csp/arch/freertos/csp_malloc.c \
Core/Src/csp/arch/freertos/csp_queue.c \
Core/Src/csp/arch/freertos/csp_semaphore.c \
Core/Src/csp/arch/freertos/csp_system.c \
Core/Src/csp/arch/freertos/csp_thread.c \
Core/Src/csp/arch/freertos/csp_time.c \
Core/Src/csp/crypto/csp_hmac.c \
Core/Src/csp/crypto/csp_sha1.c \
Core/Src/csp/crypto/csp_xtea.c \
Core/Src/csp/drivers/usart/usart_kiss.c \
Core/Src/csp/interfaces/csp_if_can.c \
Core/Src/csp/interfaces/csp_if_can_pbuf.c \
Core/Src/csp/interfaces/csp_if_i2c.c \
Core/Src/csp/interfaces/csp_if_kiss.c \
Core/Src/csp/interfaces/csp_if_lo.c \
Core/Src/csp/interfaces/csp_if_zmqhub.c \
Core/Src/csp/rtable/csp_rtable.c \
Core/Src/csp/rtable/csp_rtable_static.c \
Core/Src/csp/transport/csp_rdp.c \
Core/Src/csp/transport/csp_udp.c \
Core/Src/csp/csp_bridge.c \
Core/Src/csp/csp_buffer.c \
Core/Src/csp/csp_conn.c \
Core/Src/csp/csp_crc32.c \
Core/Src/csp/csp_debug.c \
Core/Src/csp/csp_dedup.c \
Core/Src/csp/csp_endian.c \
Core/Src/csp/csp_hex_dump.c \
Core/Src/csp/csp_iflist.c \
Core/Src/csp/csp_init.c \
Core/Src/csp/csp_io.c \
Core/Src/csp/csp_port.c \
Core/Src/csp/csp_promisc.c \
Core/Src/csp/csp_qfifo.c \
Core/Src/csp/csp_route.c \
Core/Src/csp/csp_service_handler.c \
Core/Src/csp/csp_services.c \
Core/Src/csp/csp_sfp.c \
Core/Src/debug_tools/debug_i2c.c \
Core/Src/debug_tools/debug_uart.c \
Core/Src/eps_drivers/eps_calculations.c \
Core/Src/eps_drivers/eps_channel_control.c \
Core/Src/eps_drivers/eps_commands.c \
Core/Src/eps_drivers/eps_internal_drivers.c \
Core/Src/eps_drivers/eps_power_management.c \
Core/Src/eps_drivers/eps_struct_packers.c \
Core/Src/eps_drivers/eps_time.c \
Core/Src/eps_drivers/eps_types_to_json.c \
Core/Src/littlefs/flash_benchmark.c \
Core/Src/littlefs/flash_driver.c \
Core/Src/freertos.c \
Core/Src/gps/gps_ascii_parsers.c \
Core/Src/gps/gps_internal_drivers.c \
Core/Src/gps/gps_types.c \
Core/Src/littlefs/lfs.c \
Core/Src/littlefs/lfs_util.c \
Core/Src/littlefs/littlefs_benchmark.c \
Core/Src/littlefs/littlefs_driver.c \
Core/Src/littlefs/littlefs_helper.c \
Core/Src/log/log.c \
Core/Src/log/log_sinks.c \
Core/Src/main.c \
Core/Src/mpi/mpi_command_handling.c \
Core/Src/mpi/mpi_transceiver.c \
Core/Src/obc_temperature_sensor/obc_temperature_sensor_driver.c \
Core/Src/rtos_tasks/rtos_background_upkeep.c \
Core/Src/rtos_tasks/rtos_eps_tasks.c \
Core/Src/rtos_tasks/rtos_task_helpers.c \
Core/Src/rtos_tasks/rtos_tasks.c \
Core/Src/rtos_tasks/rtos_tcmd_receive_debug_uart_task.c \
Core/Src/stm32/stm32_internal_flash_drivers.c \
Core/Src/stm32/stm32_reboot_reason.c \
Core/Src/stm32l4xx_hal_msp.c \
Core/Src/stm32l4xx_hal_timebase_tim.c \
Core/Src/stm32l4xx_it.c \
Core/Src/stm_drivers/timing_helpers.c \
Core/Src/syscalls.c \
Core/Src/sysmem.c \
Core/Src/system_stm32l4xx.c \
Core/Src/telecommands/agenda_telecommand_defs.c \
Core/Src/telecommands/antenna_telecommand_defs.c \
Core/Src/telecommands/camera_telecommand_defs.c \
Core/Src/telecommands/comms_telecommand_defs.c \
Core/Src/telecommands/config_telecommand_defs.c \
Core/Src/telecommands/eps_telecommands.c \
Core/Src/telecommands/flash_telecommand_defs.c \
Core/Src/telecommands/freertos_telecommand_defs.c \
Core/Src/telecommands/gps_telecommand_defs.c \
Core/Src/telecommands/i2c_telecommand_defs.c \
Core/Src/telecommands/lfs_telecommand_defs.c \
Core/Src/telecommands/log_telecommand_defs.c \
Core/Src/telecommands/mpi_telecommand_defs.c \
Core/Src/telecommands/obc_temperature_sensor_telecommand_defs.c \
Core/Src/telecommands/stm32_internal_flash_telecommand_defs.c \
Core/Src/telecommands/system_telecommand_defs.c \
Core/Src/telecommands/telecommand_adcs.c \
Core/Src/telecommands/telecommand_crc.c \
Core/Src/telecommands/telecommand_definitions.c \
Core/Src/telecommands/telecommand_executor.c \
Core/Src/telecommands/telecommand_parser.c \
Core/Src/telecommands/testing_telecommand_defs.c \
Core/Src/telecommands/timekeeping_telecommand_defs.c \
Core/Src/telecommands/uart_telelecommand_defs.c \
Core/Src/telecommand_exec/telecommand_args_helpers.c \
Core/Src/timekeeping/timekeeping.c \
Core/Src/transforms/arrays.c \
Core/Src/transforms/byte_transforms.c \
Core/Src/transforms/number_comparisons.c \
Core/Src/uart_handler/uart_handler.c \
Core/Src/unit_tests/test_adcs.c \
Core/Src/unit_tests/test_ant_commands.c \
Core/Src/unit_tests/test_arrays.c \
Core/Src/unit_tests/test_byte_transforms.c \
Core/Src/unit_tests/test_configuration_variables.c \
Core/Src/unit_tests/test_crc.c \
Core/Src/unit_tests/test_eps_calculations.c \
Core/Src/unit_tests/test_eps_drivers.c \
Core/Src/unit_tests/test_eps_struct_packers.c \
Core/Src/unit_tests/test_logging.c \
Core/Src/unit_tests/test_obc_temperature_sensor.c \
Core/Src/unit_tests/test_sha256.c \
Core/Src/unit_tests/test_telecommand_arg_helpers.c \
Core/Src/unit_tests/test_telecommand_parser.c \
Core/Src/unit_tests/test_tests.c \
Core/Src/unit_tests/unit_test_executor.c \
Core/Src/unit_tests/unit_test_gps.c \
Core/Src/unit_tests/unit_test_inventory.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_crc.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_crc_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_dma.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_dma_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_exti.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ramfunc.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_gpio.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_i2c_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_iwdg.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rcc_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_spi_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_tim_ex.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c \
Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart_ex.c \
Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.c \
Middlewares/Third_Party/FreeRTOS/Source/croutine.c \
Middlewares/Third_Party/FreeRTOS/Source/event_groups.c \
Middlewares/Third_Party/FreeRTOS/Source/list.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/port.c \
Middlewares/Third_Party/FreeRTOS/Source/portable/MemMang/heap_4.c \
Middlewares/Third_Party/FreeRTOS/Source/queue.c \
Middlewares/Third_Party/FreeRTOS/Source/stream_buffer.c \
Middlewares/Third_Party/FreeRTOS/Source/tasks.c \
Middlewares/Third_Party/FreeRTOS/Source/timers.c

CPP_SOURCES = \


# ASM sources
ASM_SOURCES =  \
startup_stm32l4r5xx.s



#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CXX = $(GCC_PATH)/$(PREFIX)g++$(POSTFIX)
CC = $(GCC_PATH)/$(PREFIX)gcc$(POSTFIX)
AS = $(GCC_PATH)/$(PREFIX)gcc$(POSTFIX) -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy$(POSTFIX)
SZ = $(GCC_PATH)/$(PREFIX)size$(POSTFIX)
else
CXX = $(PREFIX)g++
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DSTM32L4R5xx \
-DUSE_HAL_DRIVER 


# CXX defines
CXX_DEFS =  \
-DSTM32L4R5xx \
-DUSE_HAL_DRIVER


# AS includes
AS_INCLUDES = \

# C includes
C_INCLUDES =  \
-ICore/Inc \
-ICore/Inc/debug_tools \
-ICore/Inc/rtos_tasks \
-ICore/Inc/littlefs \
-ICore/Inc/telecommands \
-ICore/Inc/transforms \
-ICore/Inc/uart_handler \
-ICore/Inc/unit_tests \
-IDrivers/CMSIS/Device/ST/STM32L4xx/Include \
-IDrivers/CMSIS/Include \
-IDrivers/MPI/Inc \
-IDrivers/STM32L4xx_HAL_Driver/Inc \
-IDrivers/STM32L4xx_HAL_Driver/Inc/Legacy \
-IMiddlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 \
-IMiddlewares/Third_Party/FreeRTOS/Source/include \
-IMiddlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F \
-IMiddlewares/Third_Party/libcsp/include \
-IMiddlewares/Third_Party/libcsp/src



# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -Wextra -Wpedantic -Wmissing-field-initializers -Wno-unused-parameter

CXXFLAGS = $(MCU) $(CXX_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections -feliminate-unused-debug-types

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf -ggdb
CXXFLAGS += -g -gdwarf -ggdb
endif

# Add additional flags
CFLAGS += -Wall -fdata-sections -ffunction-sections 
ASFLAGS += -Wall -fdata-sections -ffunction-sections 
CXXFLAGS += 

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
CXXFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32L4R5ZITx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = \


# Additional LD Flags from config file
ADDITIONALLDFLAGS = -Wl,--print-memory-usage -specs=nano.specs 

LDFLAGS = $(MCU) $(ADDITIONALLDFLAGS) -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of cpp program objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))

# list of C objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))

# list of ASM program objects
UPPER_CASE_ASM_SOURCES = $(filter %.S,$(ASM_SOURCES))
LOWER_CASE_ASM_SOURCES = $(filter %.s,$(ASM_SOURCES))

OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(UPPER_CASE_ASM_SOURCES:.S=.o)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(LOWER_CASE_ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.cpp STM32Make.make | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cxx STM32Make.make | $(BUILD_DIR) 
	$(CXX) -c $(CXXFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cxx=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.c STM32Make.make | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s STM32Make.make | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/%.o: %.S STM32Make.make | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) STM32Make.make
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@

#######################################
# flash
#######################################
flash: $(BUILD_DIR)/$(TARGET).elf
	"/opt/homebrew/bin/openocd" -f ./openocd.cfg -c "program $(BUILD_DIR)/$(TARGET).elf verify reset exit"

#######################################
# erase
#######################################
erase: $(BUILD_DIR)/$(TARGET).elf
	"/opt/homebrew/bin/openocd" -f ./openocd.cfg -c "init; reset halt; stm32l4x mass_erase 0; exit"

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

#######################################
# custom makefile rules
#######################################


	
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
